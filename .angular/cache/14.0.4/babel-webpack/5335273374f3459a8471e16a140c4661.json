{"ast":null,"code":"import { increment, decrement, reset } from '../counter.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nexport class MyCounterComponent {\n  constructor(store) {\n    this.store = store;\n    this.count$ = store.select('count');\n  }\n\n  increment() {\n    this.store.dispatch(increment());\n  }\n\n  decrement() {\n    this.store.dispatch(decrement());\n  }\n\n  reset() {\n    this.store.dispatch(reset());\n  }\n\n  ngOnInit() {}\n\n}\n\nMyCounterComponent.ɵfac = function MyCounterComponent_Factory(t) {\n  return new (t || MyCounterComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nMyCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MyCounterComponent,\n  selectors: [[\"app-my-counter\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[3, \"click\"]],\n  template: function MyCounterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function MyCounterComponent_Template_button_click_0_listener() {\n        return ctx.increment();\n      });\n      i0.ɵɵtext(1, \"Increment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function MyCounterComponent_Template_button_click_5_listener() {\n        return ctx.decrement();\n      });\n      i0.ɵɵtext(6, \"Decrement\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function MyCounterComponent_Template_button_click_7_listener() {\n        return ctx.reset();\n      });\n      i0.ɵɵtext(8, \"Reset\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Current Count: \", i0.ɵɵpipeBind1(4, 1, ctx.count$), \"\");\n    }\n  },\n  dependencies: [i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJteS1jb3VudGVyLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,KAA/B,QAA4C,mBAA5C;;;;AASA,OAAM,MAAOC,kBAAP,CAAyB;EAG7BC,YAAoBC,KAApB,EAAmD;IAA/B;IAClB,KAAKC,MAAL,GAAcD,KAAK,CAACE,MAAN,CAAa,OAAb,CAAd;EACD;;EAEDP,SAAS;IACP,KAAKK,KAAL,CAAWG,QAAX,CAAoBR,SAAS,EAA7B;EACD;;EAEDC,SAAS;IACP,KAAKI,KAAL,CAAWG,QAAX,CAAoBP,SAAS,EAA7B;EACD;;EAEDC,KAAK;IACH,KAAKG,KAAL,CAAWG,QAAX,CAAoBN,KAAK,EAAzB;EACD;;EAEDO,QAAQ,IACP;;AApB4B;;;mBAAlBN,oBAAkBO;AAAA;;;QAAlBP;EAAkBQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ/BL;MAAQA;QAAA,OAASM,eAAT;MAAoB,CAApB;MAAsBN;MAASA;MAEvCA;MAAKA;;MAAmCA;MAExCA;MAAQA;QAAA,OAASM,eAAT;MAAoB,CAApB;MAAsBN;MAASA;MAEvCA;MAAQA;QAAA,OAASM,WAAT;MAAgB,CAAhB;MAAkBN;MAAKA;;;;MAJ1BA;MAAAA","names":["increment","decrement","reset","MyCounterComponent","constructor","store","count$","select","dispatch","ngOnInit","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\sammi\\Downloads\\NgRx\\Angular-Counter\\src\\app\\my-counter\\my-counter.component.ts","C:\\Users\\sammi\\Downloads\\NgRx\\Angular-Counter\\src\\app\\my-counter\\my-counter.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { increment, decrement, reset } from '../counter.action';\n\n\n@Component({\n  selector: 'app-my-counter',\n  templateUrl: './my-counter.component.html',\n  styleUrls: ['./my-counter.component.css']\n})\n\nexport class MyCounterComponent implements OnInit {\n  count: Observable<number>\n\n  constructor(private store: Store<{ count: number }>) {\n    this.count$ = store.select('count');  \n  }\n\n  increment() {\n    this.store.dispatch(increment());\n  }\n\n  decrement(){\n    this.store.dispatch(decrement());\n  }\n\n  reset() {\n    this.store.dispatch(reset());\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button (click)=\"increment()\">Increment</button>\n\n<div>Current Count: {{ count$ | async }}</div>\n\n<button (click)=\"decrement()\">Decrement</button>\n\n<button (click)=\"reset()\">Reset</button>"]},"metadata":{},"sourceType":"module"}